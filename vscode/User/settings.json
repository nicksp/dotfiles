{
  /*
  |--------------------------------------------------------------------------
  | TOC:
  |
  | 01. Must-have Settings
  | 02. DX Improvements
  | 03. Zen & Overall Cleanup
  | 04. Git and Source Control Management
  | 05. The Look & Typography
  | 06. The Little Things
  | 07. Accessibility
  | 08. Code Validation & Formatting
  | 09. 3rd Party Plugins
  |--------------------------------------------------------------------------
  */

  /*
  |--------------------------------------------------------------------------
  | Must-have Settings
  |--------------------------------------------------------------------------
  */

  // Trim stuff on save
  "files.trimTrailingWhitespace": true,
  "files.trimFinalNewlines": true,

  "files.insertFinalNewline": true,

  // Panels positioning
  "workbench.sideBar.location": "right",
  "workbench.panel.defaultLocation": "bottom",

  // Autocompletes
  // https://stackoverflow.com/questions/49956963/markdown-not-using-emmet
  // https://css-tricks.com/can-vs-code-emmet/
  "emmet.excludeLanguages": [],
  "emmet.includeLanguages": {
    "vue-html": "html",
    "javascript": "javascriptreact",
    "jsx-sublime-babel-tags": "javascriptreact",
    "markdown": "html",
    "typescript": "html"
  },
  "emmet.syntaxProfiles": {
    "javascript": "jsx"
  },
  "emmet.triggerExpansionOnTab": true,
  "emmet.showExpandedAbbreviation": "always",
  "emmet.showAbbreviationSuggestions": false,
  "emmet.showSuggestionsAsSnippets": true,

  // Code startup & new file creation
  "files.defaultLanguage": "markdown",
  "workbench.startupEditor": "newUntitledFile",
  "window.newWindowDimensions": "inherit",

  // Privacy
  "telemetry.telemetryLevel": "off",
  "redhat.telemetry.enabled": false,
  "workbench.enableExperiments": false,
  // Don't use online search in the settings editor
  "workbench.settings.enableNaturalLanguageSearch": false,

  "workbench.editor.enablePreview": false,
  "editor.copyWithSyntaxHighlighting": false,
  // Sensible multi-cursor trigger
  "editor.multiCursorModifier": "ctrlCmd",

  // Essential editor setup
  "editor.wordWrap": "on",
  "editor.tabSize": 2,
  "editor.rulers": [80],
  "editor.cursorStyle": "line",
  "editor.cursorWidth": 2,
  "editor.cursorBlinking": "solid",
  "window.zoomLevel": 0.35,

  /*
  |--------------------------------------------------------------------------
  | DX Improvements
  |--------------------------------------------------------------------------
  */

  "editor.scrollBeyondLastLine": false,
  "editor.inlineSuggest.enabled": true,
  "editor.inlineSuggest.suppressSuggestions": true,
  "editor.tabCompletion": "on",
  "editor.acceptSuggestionOnEnter": "off",
  "editor.wordBasedSuggestions": "off",
  "editor.autoClosingComments": "never",
  "editor.experimentalEditContextEnabled": true,
  "editor.pasteAs.preferences": ["text.updateImports"],

  // Peek-less Go to navigation
  "editor.gotoLocation.multipleDeclarations": "goto",
  "editor.gotoLocation.multipleDefinitions": "goto",
  "editor.gotoLocation.multipleImplementations": "goto",
  "editor.gotoLocation.multipleReferences": "goto",
  "editor.gotoLocation.multipleTypeDefinitions": "goto",

  // Improved tab title rendering
  "workbench.editor.customLabels.patterns": {
    "**/routes/**/+page.svelte": "${dirname(1)}/${dirname}",
    "**/routes/**/+page.server.ts": "/${dirname} [server]",
    "**/app/**/page.tsx": "${dirname} — Page",
    "**/app/**/layout.tsx": "${dirname} — Layout",
    "**/components/**/index.tsx": "${dirname} — Component",
    // Quick open files by their folder name if the file name is index.*
    "**/index.*": "${dirname}/${filename}.${extname}"
  },

  // Sticky scroll
  "editor.stickyScroll.enabled": true,
  "editor.stickyScroll.maxLineCount": 3,

  "editor.acceptSuggestionOnCommitCharacter": false,

  // Top window bar
  // We have a lot of space in the window title, so why not use it to show where we are
  // This comes in handy when the Explorer is closed and we're switching over
  // between multiple projects.
  "window.title": "${activeEditorMedium}${separator}${rootName} ${dirty}",

  "window.openFilesInNewWindow": "off",

  // Explorer improvements
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmDelete": false,
  "explorer.compactFolders": false,
  "explorer.fileNesting.enabled": false,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml, bun.lock"
  },
  // Improve Explorer tree readability
  "workbench.tree.indent": 20,

  "workbench.commandPalette.preserveInput": false,
  "workbench.editorAssociations": {
    // Don't open SVG files as preview
    "*.svg": "default"
  },

  /*
   * Terminal look
   *
   * VS Code automatically uses your default shell, but I'm setting it
   * explicitly. Most of the look is already taken care of, but here are some
   * settings that aren’t.
   */
  "terminal.integrated.profiles.osx": {
    "zsh": {
      "path": "/opt/homebrew/bin/zsh",
      "args": ["-l"]
    }
  },
  // Run tasks in interactive shell, otherwise some things (like pnpm installed
  // using corepack) aren't working
  "terminal.integrated.automationProfile.osx": {
    "path": "/opt/homebrew/bin/zsh",
    "args": ["-i"]
  },
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.fontSize": 15,
  "terminal.integrated.lineHeight": 1.1,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.cursorStyleInactive": "none",
  "terminal.integrated.cursorWidth": 2,
  // Disable terminal intellisense
  "terminal.integrated.suggest.enabled": false,
  "terminal.integrated.suggest.inlineSuggestion": "off",
  "terminal.integrated.shellIntegration.decorationsEnabled": "never",
  "terminal.integrated.shellIntegration.showCommandGuide": false,
  "terminal.integrated.stickyScroll.enabled": false,
  "terminal.integrated.tabs.enableAnimation": false,
  "terminal.integrated.tabStopWidth": 2,
  // Use normal colors for bold text
  "terminal.integrated.drawBoldTextInBrightColors": false,
  // Without this, the customized colors will be washed out
  "terminal.integrated.minimumContrastRatio": 1,
  "terminal.integrated.copyOnSelection": true,
  // Make VS Code consume the keybinding instead of sending the key presses for the command you want to bind a keyboard shortcut to to the shell
  "terminal.integrated.commandsToSkipShell": ["workbench.action.closePanel"],
  "terminal.integrated.gpuAcceleration": "on",
  "terminal.integrated.enablePersistentSessions": false,
  "terminal.integrated.initialHint": false,
  "terminal.integrated.hideOnStartup": "always",
  "terminal.integrated.tabs.showActions": "never",

  /*
  |--------------------------------------------------------------------------
  | Zen & Overall Cleanup
  |--------------------------------------------------------------------------
  */

  // Better Zen mode
  "zenMode.fullScreen": false,
  "zenMode.centerLayout": true,
  "zenMode.showTabs": "none",

  // Hide all the panels and junk in code editor and file explorer
  "breadcrumbs.enabled": false,
  "breadcrumbs.filePath": "off",
  "comments.maxHeight": false,
  "comments.openView": "never",
  "comments.visible": false,
  "workbench.editor.tabActionCloseVisibility": false,
  "workbench.statusBar.visible": false,
  "workbench.activityBar.location": "hidden",
  "workbench.editor.editorActionsLocation": "hidden",
  "workbench.editor.showTabs": "none",
  "workbench.editor.empty.hint": "hidden",
  "workbench.editor.decorations.badges": false,
  "workbench.tips.enabled": false,
  "workbench.layoutControl.enabled": false,
  "workbench.reduceMotion": "on",
  "explorer.decorations.badges": false,
  "explorer.openEditors.visible": 1,
  "editor.find.addExtraSpaceOnTop": false,
  "editor.colorDecorators": false,
  "editor.glyphMargin": false,
  "editor.showFoldingControls": "never", // ?
  "editor.renderLineHighlight": "none",
  "editor.occurrencesHighlight": "off",
  "editor.inlayHints.padding": true,
  "editor.lineNumbers": "off",
  "editor.scrollbar.horizontal": "hidden",
  "editor.hideCursorInOverviewRuler": true,
  "editor.overviewRulerBorder": false,
  "editor.minimap.enabled": false,
  "editor.lightbulb.enabled": "off",
  "outline.problems.badges": false,
  "outline.showVariables": false,
  "problems.autoReveal": false,
  "problems.decorations.enabled": false,
  "search.decorations.badges": false,
  "git.decorations.enabled": false,
  "git.blame.editorDecoration.enabled": false,
  "scm.diffDecorations": "gutter",
  "scm.diffDecorationsGutterPattern": { "modified": false },
  "scm.diffDecorationsIgnoreTrimWhitespace": "true",
  "testing.automaticallyOpenTestResults": "openOnTestFailure",
  "typos.diagnosticSeverity": "Information",
  "window.commandCenter": false,
  "workbench.navigationControl.enabled": false,

  /*
  |--------------------------------------------------------------------------
  | Git and Source Control Management
  |--------------------------------------------------------------------------
  */

  // Show me whitespace in diffs, just in case some slips through, and shows up in the GitHub PR
  "diffEditor.ignoreTrimWhitespace": false,
  "diffEditor.experimental.showMoves": true,
  "diffEditor.codeLens": true,

  "git.closeDiffOnOperation": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.mergeEditor": true,

  "merge-conflict.autoNavigateNextConflict.enabled": true,

  "scm.inputFontFamily": "editor",
  "scm.inputFontSize": 16,
  "scm.inputMaxLineCount": 20,
  "scm.inputMinLineCount": 4,

  /*
  |--------------------------------------------------------------------------
  | The Look & Typography
  |--------------------------------------------------------------------------
  */

  "workbench.colorTheme": "Squirrelsong Light (Dark Terminal)",
  "workbench.iconTheme": "catppuccin-latte",

  // Typography
  "workbench.fontAliasing": "auto",

  // MonoLisa typography preset
  "editor.lineHeight": 1.6, // ? 0 has a similar effect and will automatically adjust based on the font-size.
  "editor.fontFamily": "MonoLisa, \"Symbols Nerd Font Mono\"",
  "editor.fontLigatures": "'calt' on, 'liga' off, 'zero' on, 'ss11' on, 'ss08' on",
  "editor.fontSize": 17,

  // To override or define any workbench UI styles
  "workbench.colorCustomizations": {
    // Hide warnings and other distractions from overview ruler (scroll bar)
    "editorOverviewRuler.warningForeground": "#ffffff00",
    "editorOverviewRuler.infoForeground": "#ffffff00",
    "editorOverviewRuler.bracketMatchForeground": "#ffffff00",
    "editorOverviewRuler.wordHighlightForeground": "#ffffff00",
    "editorOverviewRuler.wordHighlightTextForeground": "#ffffff00",

    // Hide command guide in the terminal (vertical bar that appear on the left
    // side of the command on hover)
    "notebook.inactiveFocusedCellBorder": "#0000",

    // ErrorLens
    "errorLens.errorForegroundLight": "#e5ada8",
    "errorLens.errorBackgroundLight": "#f3dcda40",
    "errorLens.warningForegroundLight": "#eeceac",
    "errorLens.warningBackgroundLight": "#f7e7d540",
    "errorLens.hintForegroundLight": "#adccc5",
    "errorLens.hintBackgroundLight": "#d6e6e240"
  },

  // To override or define any code syntax styles of languages like e.g. Go or JavaScript
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "name": "Comment",
        "scope": ["comment", "punctuation.definition.comment"],
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "name": "Export Default",
        "scope": ["keyword.control.export"],
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "name": "[HTML] - Entity Other",
        "scope": "text.html.basic entity.other",
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "name": "[MARKDOWN] - Quote Paragraph",
        "scope": "markup.quote.markdown meta.paragraph.markdown",
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "name": "[TYPESCRIPT] Returned Type",
        "scope": ["meta.return.type.ts"],
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "name": "Italicsify current theme",
        "scope": [
          "modifier",
          "this",
          "comment",
          "storage.modifier",
          "entity.other.attribute-name.html"
        ],
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "scope": "keyword.other.dotenv",
        "settings": {
          "foreground": "#FF000000"
        }
      }
    ]
  },

  /*
  |--------------------------------------------------------------------------
  | The Little Things
  |--------------------------------------------------------------------------
  */

  // Don't update disabled extensions
  "extensions.autoUpdate": "onlyEnabledExtensions",
  "extensions.ignoreRecommendations": true,

  // Enabling highlighting of the indent guide for the current scope
  "editor.guides.highlightActiveIndentation": true,

  "editor.lineDecorationsWidth": "32", // Undocumented left padding

  // Syntax highlighting
  "files.associations": {
    "*.js.snap": "javascript",
    ".prettierrc": "json"
  },

  "files.exclude": {
    "**/.git": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    // Show node_modules but don't show anything inside
    "node_modules/**/*": true,
    "**/.next": true
  },

  "search.seedOnFocus": true,
  // Exclude from search
  "search.exclude": {
    "**/package-lock.json": true,
    "**/pnpm-lock.yaml": true,
    "**/yarn.lock": true,
    "**/node_modules": true,
    "**/bun.lock": true,
    "**/coverage": true,
    "**/dist": true,
    "**/build": true,
    "**/.build": true,
    "**/.gh-pages": true,
    "**/.git": true
  },

  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/*/**": true,
    "**/.hg/store/**": true,
    "**/public/**": true,
    "**/tmp": true
  },

  "window.closeWhenEmpty": true,
  "window.restoreWindows": "all",

  "search.useParentIgnoreFiles": true,

  "editor.smoothScrolling": true,
  "editor.largeFileOptimizations": false,
  "editor.semanticHighlighting.enabled": true,

  "workbench.commandPalette.experimental.suggestCommands": true,
  "workbench.editorLargeFileConfirmation": 150,
  // Open JSON editor for settings
  "workbench.settings.editor": "json",

  "security.promptForLocalFileProtocolHandling": false,
  "task.problemMatchers.neverPrompt": { "npm": true },

  // Bracket pair colorization
  // Replaces: https://code.visualstudio.com/blogs/2021/09/29/bracket-pair-colorization
  "editor.guides.bracketPairs": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,

  // Controls if and when to render horizontal lines when a line of code crosses into another indentation level
  "editor.guides.bracketPairsHorizontal": "active",

  // When I accidentally hit copy without selecting anything and it overrides my clipboard
  "editor.emptySelectionClipboard": false,

  // Always use indentation from EditorConfig/Prettier instead of file own indentation
  "editor.detectIndentation": false,

  // Give it to me as fast as you have it
  "editor.quickSuggestionsDelay": 0,
  "editor.quickSuggestions": {
    "strings": "on"
  },

  // Depends on whether the language, related symbols, e.g. HTML tags, are updated while editing
  // Replaces: https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag
  // for HTML files only
  "editor.linkedEditing": true,

  // Show snippets after any other intellisense results so that TS types props go first
  "editor.suggestSelection": "first",
  "editor.snippetSuggestions": "bottom",
  "editor.suggest.snippetsPreventQuickSuggestions": false,

  /*
  |--------------------------------------------------------------------------
  | Accessibility
  |--------------------------------------------------------------------------
  */

  "editor.accessibilitySupport": "off",
  // To make links easier to distinguish from regular text in the workbench
  "accessibility.underlineLinks": true,

  /*
  |--------------------------------------------------------------------------
  | Code Validation & Formatting
  | (ESLint, Prettier, Stylelint & friends..)
  |--------------------------------------------------------------------------
  */

  // Common settings
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": false,
  "editor.formatOnPaste": true,
  "files.autoSave": "onFocusChange",
  // Don’t autosave files with syntax errors
  "files.autoSaveWhenNoErrors": true,

  // Let ESLint fix any issues it can
  "editor.codeActionsOnSave": {
    // Trigger lint autofixing on explicit save (not on autosave)
    "source.fixAll": "explicit",
    "source.organizeImports": "never"
  },

  // JS
  "javascript.format.enable": false,
  "javascript.autoClosingTags": true,
  "javascript.preferences.importModuleSpecifier": "relative",
  "javascript.preferGoToSourceDefinition": true,
  "javascript.preferences.quoteStyle": "single",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "javascript.validate.enable": false,
  // Auto import modules
  // Replaces: https://marketplace.visualstudio.com/items?itemName=steoates.autoimport
  "javascript.suggest.autoImports": true,
  // Path Intellisense
  // Replaces: https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense
  "javascript.suggest.paths": true,

  // TS
  "typescript.format.enable": false,
  "typescript.autoClosingTags": true,
  "typescript.preferences.quoteStyle": "single",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.preferences.preferTypeOnlyAutoImports": true,
  "typescript.workspaceSymbols.scope": "currentProject",
  "typescript.preferGoToSourceDefinition": true,
  "typescript.enablePromptUseWorkspaceTsdk": true,
  // Auto import modules
  // Replaces: https://marketplace.visualstudio.com/items?itemName=steoates.autoimport
  "typescript.suggest.autoImports": true,
  // Path Intellisense
  // Replaces: https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense
  "typescript.suggest.paths": true,

  // HTML
  "html.format.enable": false,
  "html.format.wrapLineLength": 0,
  // Auto closing HTML tags
  // Replaces: https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag
  "html.autoClosingTags": true,

  // JSON
  "json.format.enable": false,

  // Markdown
  "markdown.validate.enabled": true,

  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
    // If you want a hard line-break (<br>) in the output,
    // we need to put two or more spaces at the end of a line.
    // It is a part of CommonMark, so we don’t want to prevent it.
    "files.trimTrailingWhitespace": false
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[astro]": {
    "editor.defaultFormatter": "astro-build.astro-vscode"
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "[scminput]": {
    "editor.rulers": [72],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 72
  },

  /*
  |--------------------------------------------------------------------------
  | 3rd Party Plugins
  |--------------------------------------------------------------------------
  */

  // Only run Prettier in projects that are set up to use it
  "prettier.requireConfig": true,
  // Do not look at `.editorconfig` files for Prettier configuration
  "prettier.useEditorConfig": false,

  "eslint.rules.customizations": [
    // Change the severity of all autofixable issues to `off`
    { "rule": "*", "fixable": true, "severity": "off" }
  ],
  "eslint.useESLintClass": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "html",
    "astro"
  ],

  "catppuccin-icons.hidesExplorerArrows": true,

  // Code Spell Checker
  "cSpell.spellCheckDelayMs": 500,
  "cSpell.enabledFileTypes": {
    "*": true,
    "mdx": true
  },
  "cSpell.numSuggestions": 5,
  "cSpell.minWordLength": 3,
  "cSpell.suggestionMenuType": "quickFix",
  "cSpell.customDictionaries": {
    "spellright": {
      "name": "spellright",
      "path": "~/dotfiles/vscode/spellright.dict",
      "scope": "user",
      "addWords": true
    }
  },

  // ErrorLens
  "errorLens.fontSize": "14",
  // Hide info (like unknown words) messages from output to clean up a bit
  "errorLens.enabledDiagnosticLevels": ["error", "warning", "hint"],
  "errorLens.exclude": ["never (read|used)", "Unknown word"],
  "errorLens.errorGutterIconColor": "#bc5248",
  "errorLens.warningGutterIconColor": "#de9e59",
  "errorLens.hintGutterIconColor": "#eeceac",

  "color-highlight.markerType": "underline",
  "color-highlight.markRuler": false,
  "color-highlight.matchWords": false,

  // Important Git config
  "git.autoStash": true,
  "git.autofetch": true,
  "git.allowForcePush": true,
  "git.inputValidationSubjectLength": 50,
  "git.openRepositoryInParentFolders": "always",

  // Markdownlint
  "markdownlint.config": {
    "no-trailing-punctuation": false
  },

  "yaml.customTags": [
    "!And",
    "!And sequence",
    "!If",
    "!If sequence",
    "!Not",
    "!Not sequence",
    "!Equals",
    "!Equals sequence",
    "!Or",
    "!Or sequence",
    "!FindInMap",
    "!FindInMap sequence",
    "!Base64",
    "!Join",
    "!Join sequence",
    "!Cidr",
    "!Ref",
    "!Sub",
    "!Sub sequence",
    "!GetAtt",
    "!GetAZs",
    "!ImportValue",
    "!ImportValue sequence",
    "!Select",
    "!Select sequence",
    "!Split",
    "!Split sequence"
  ],

  "githubPullRequests.defaultMergeMethod": "squash",
  "githubPullRequests.pullPullRequestBranchBeforeCheckout": "pullAndMergeBase",

  "tailwindCSS.classAttributes": ["class", "className", "ngClass", "variants"],

  // Tweak AI tools
  "chat.disableAIFeatures": true,
  "chat.commandCenter.enabled": false,
  "chat.fontSize": 15,
  "chat.editor.fontSize": 15,
  "github.copilot.editor.enableCodeActions": false,
  "github.copilot.enable": {
    "*": false,
    "plaintext": false,
    "markdown": false,
    "scminput": false
  },
  // Disable annoying hints "Cmd+I to continue with Copilot"
  "inlineChat.lineNaturalLanguageHint": false,
  "kilo-code.allowedCommands": [
    "git log",
    "git diff",
    "git show",
    "pnpm install",
    "npm run typecheck",
    "npm run format",
    "npm run lint",
    "npm test",
    "npm install",
    "tsc"
  ],
  "kilo-code.deniedCommands": [],
  "amp.tab.enabled": false,
  "amp.ui.zoomLevel": 1.15,
  "amp.git.commit.ampThread.enabled": false,
  "amp.git.commit.coauthor.enabled": false,
  "amp.mcpServers": {
    "playwright": {
      "command": "npx",
      "args": ["-y", "@playwright/mcp@latest", "--headless", "--isolated"]
    },
    "context7": {
      "url": "https://mcp.context7.com/mcp",
      "custom_instruction": {
        "text": "Never retrieve more than 10000 tokens at a time from the get-library-docs tool.\nAlways search for a specific topic when using the get-library-docs tools."
      }
    }
  },
  "amp.tools.disable": [],
  "amp.permissions": []
}
